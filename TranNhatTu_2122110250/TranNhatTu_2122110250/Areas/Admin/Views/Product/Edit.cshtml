@model TranNhatTu_2122110250.ViewModels.ProductEditViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/Layout.cshtml";
    ViewData["Title"] = "Sửa sản phẩm";
}

@section Styles {
    <link href="~/css/admin/productForm.css" rel="stylesheet" />
}

<div class="form-wrapper">
    <div class="form-card">
        <h2 class="form-title">✏️ Sửa sản phẩm</h2>

        @if (Model != null && !string.IsNullOrEmpty(Model.CategoryLoadError))
        {
            <div class="alert alert-danger">
                @Model.CategoryLoadError
            </div>
        }

        <form asp-action="Edit" method="post" enctype="multipart/form-data" class="product-form">
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Nhập tên sản phẩm" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price)
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", type = "number", min = "0", step = "1000", placeholder = "Nhập giá sản phẩm" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock)
                @Html.TextBoxFor(model => model.Stock, new { @class = "form-control", type = "number", min = "0" })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId)
                @Html.DropDownListFor(model => model.CategoryId, (SelectList)ViewData["CategoryId"], "Chọn danh mục", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>Ảnh hiện tại</label><br />
                <img src="~/images/products/@Model.Image" alt="Ảnh sản phẩm" style="max-width: 200px; border-radius: 6px; box-shadow: 0 0 10px rgba(0,0,0,0.1); margin-bottom: 10px;" />
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageFile, "Chọn ảnh mới")
                <input type="file" name="imageFile" class="form-control-file" onchange="previewImage(this)" />
                <img id="previewImage" style="display: none; max-width: 200px;" />
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-success">💾 Lưu thay đổi</button>
                <a href="/Admin/Product/Index" class="btn btn-secondary">⬅ Quay lại</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function previewImage(input) {
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.getElementById('previewImage');
                    img.src = e.target.result;
                    img.style.display = 'block';
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
