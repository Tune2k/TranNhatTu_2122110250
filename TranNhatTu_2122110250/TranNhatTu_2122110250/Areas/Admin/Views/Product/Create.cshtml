@model TranNhatTu_2122110250.ViewModels.ProductCreateViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/Layout.cshtml";
}

@section Styles {
    <link href="~/css/admin/productForm.css" rel="stylesheet" />
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const inputFile = document.getElementById('imageFile');
            const previewImage = document.getElementById('previewImage');

            inputFile.addEventListener('change', function () {
                const file = this.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        previewImage.src = e.target.result;
                        previewImage.style.display = 'block';
                    };
                    reader.readAsDataURL(file); // Chỉ để xem trước, không ảnh hưởng đến việc lưu
                }
            });
        });
    </script>



}

<div class="form-wrapper">
    <div class="form-card">
        <h2 class="form-title">➕ Thêm sản phẩm mới</h2>

        @if (Model != null && !string.IsNullOrEmpty(Model.CategoryLoadError))
        {
            <div class="alert alert-danger">
                @Model.CategoryLoadError
            </div>
        }


        <form asp-action="Create" method="post" enctype="multipart/form-data" class="product-form">
            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Nhập tên sản phẩm" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price)
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", type = "number", min = "0", step = "1000", placeholder = "Nhập giá bán" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock)
                @Html.TextBoxFor(model => model.Stock, new { @class = "form-control", type = "number", min = "0" })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId)
                @Html.DropDownListFor(
                model => model.CategoryId,
                (SelectList)ViewData["CategoryId"],
                "Select a Category",
                new { @class = "form-control" }
                )
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageFile, "Ảnh sản phẩm")
                @Html.TextBoxFor(model => model.ImageFile, new { type = "file", @class = "form-control-file", id = "ImageFile" })
                <img id="previewImage" style="display: none; max-width: 200px;" />
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-success">💾 Lưu sản phẩm</button>
                <a href="/Admin/Product/Index" class="btn btn-secondary">⬅ Quay lại</a>
            </div>
        </form>
    </div>
</div>
